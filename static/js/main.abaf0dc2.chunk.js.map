{"version":3,"sources":["Store.tsx","App.tsx","reportWebVitals.ts","components/screens/HomePage.tsx","components/screens/Fav.tsx","index.tsx"],"names":["initialState","episodes","favorites","Store","React","createContext","reducer","state","action","type","payload","StoreProvider","props","useReducer","dispatch","Provider","value","children","App","useContext","className","to","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","EpisodeList","lazy","HomePage","useEffect","fetchDataAction","a","Axios","get","data","_embedded","toggleFavAction","episode","episodeInFav","includes","dispatchObj","filter","favorite","id","console","log","fallback","Fav","map","el","src","image","medium","alt","name","style","display","justifyContent","season","number","RouterPage","pageComponent","ReactDOM","render","path","document","getElementById"],"mappings":"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","file":"static/js/main.abaf0dc2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { IAction, IState } from './interfaces';\r\n\r\nconst initialState: IState = {\r\n  episodes: [],\r\n  favorites: [],\r\n};\r\n\r\nexport const Store = React.createContext<IState | any>(initialState);\r\n\r\nfunction reducer(state: IState, action: IAction): IState {\r\n  switch (action.type) {\r\n    case 'FETCH_DATA':\r\n      return { ...state, episodes: action.payload };\r\n    case 'ADD_FAV':\r\n      return { ...state, favorites: [...state.favorites, action.payload] };\r\n    case 'REMOVE_FAV':\r\n      return { ...state, favorites: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function StoreProvider(props: any): JSX.Element {\r\n  const [state, dispatch] = React.useReducer(reducer, initialState);\r\n  return (\r\n    <Store.Provider value={{ state, dispatch }}>\r\n      {props.children}\r\n    </Store.Provider>\r\n  );\r\n}\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { Link } from '@reach/router';\r\n\r\nimport { Store } from './Store';\r\n\r\nfunction App(props: any) {\r\n  const { state } = useContext(Store);\r\n\r\n  return (\r\n    <Fragment>\r\n      <header className='header'>\r\n        <Link to='/' className='anchor'>\r\n          <h1>Rick and Morty</h1>\r\n        </Link>\r\n        {state.favorites.length === 0 ? (\r\n          <p>Pick your favorite episode</p>\r\n        ) : (\r\n          <Link to='/favorites' className='anchor'>\r\n            <p>Check Fav Here: {state.favorites.length}</p>\r\n          </Link>\r\n        )}\r\n      </header>\r\n      {props.children}\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import Axios from 'axios';\r\nimport { Fragment, lazy, Suspense, useContext, useEffect } from 'react';\r\n\r\nimport { IAction, IEpisode, IEpisodeProps } from '../../interfaces';\r\nimport { Store } from '../../Store';\r\n\r\nconst EpisodeList = lazy<any>(() => import('../EpisodeList'));\r\n\r\nconst HomePage = () => {\r\n  const { state, dispatch } = useContext(Store);\r\n\r\n  useEffect(() => {\r\n    state.episodes.length === 0 && fetchDataAction();\r\n  });\r\n\r\n  const fetchDataAction = async () => {\r\n    const URL =\r\n      'https://api.tvmaze.com/singlesearch/shows?q=rick-&-morty&embed=episodes';\r\n    const { data } = await Axios.get(URL);\r\n    return dispatch({\r\n      type: 'FETCH_DATA',\r\n      payload: data._embedded.episodes,\r\n    });\r\n  };\r\n\r\n  const toggleFavAction = (episode: IEpisode): IAction => {\r\n    const episodeInFav = state.favorites.includes(episode);\r\n    let dispatchObj = {\r\n      type: 'ADD_FAV',\r\n      payload: episode,\r\n    };\r\n\r\n    if (episodeInFav) {\r\n      const favWithoutEpisodes = state.favorites.filter(\r\n        (favorite: IEpisode) => favorite.id !== episode.id\r\n      );\r\n      dispatchObj = { type: 'REMOVE_FAV', payload: favWithoutEpisodes };\r\n    }\r\n\r\n    return dispatch(dispatchObj);\r\n  };\r\n\r\n  const props: IEpisodeProps = {\r\n    episodes: state.episodes,\r\n    toggleFavAction: toggleFavAction,\r\n    favorites: state.favorites,\r\n  };\r\n  console.log(state);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Suspense fallback={<div>Loading...</div>}>\r\n        <section className='episodes-layout'>\r\n          <EpisodeList {...props} />\r\n        </section>\r\n      </Suspense>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import { useContext } from 'react';\r\nimport { Store } from '../../Store';\r\nimport { IEpisode } from '../../interfaces';\r\n\r\nconst Fav = () => {\r\n  const { state } = useContext(Store);\r\n\r\n  return (\r\n    <section className='episodes-layout'>\r\n      {state.favorites.map((el: IEpisode) => (\r\n        <section className='episodes-box'>\r\n          <img src={el.image.medium} alt={el.name} />\r\n          <div>Episode Name:{el.name}</div>\r\n          <section style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n            <div>\r\n              Season: {el.season}, Number: {el.number}\r\n            </div>\r\n            <button className='favOn'>Fav</button>\r\n          </section>\r\n        </section>\r\n      ))}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Fav;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { StoreProvider } from './Store';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { RouteComponentProps, Router } from '@reach/router';\r\nimport HomePage from './components/screens/HomePage';\r\nimport Fav from './components/screens/Fav';\r\n\r\nconst RouterPage = (\r\n  props: { pageComponent: JSX.Element } & RouteComponentProps\r\n) => props.pageComponent;\r\n\r\nReactDOM.render(\r\n  <StoreProvider>\r\n    <Router>\r\n      <App path='/'>\r\n        <RouterPage pageComponent={<HomePage />} path='/' />\r\n        <RouterPage pageComponent={<Fav />} path='/favorites' />\r\n      </App>\r\n    </Router>\r\n  </StoreProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}